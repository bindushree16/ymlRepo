resources:
  - name: repo_pipe
    type: GitRepo
    configuration:
      gitProvider: bindu_github
      path: bindushree16/ymlRepo
      
pipelines:
  - name: utilityfuction_testpipeline
    steps:
      - name: my_utilityFunction_step
        type: Bash
        configuration:
       #   integrations:
       #     - name: bindu_github
          inputResources:
            - name: repo_pipe
            
        execution:
          onExecute: 
            - printenv
            - bump_semver v3.0.0 major
            - bump_semver v3.0.0 minor
            - bump_semver v3.0.0 patch
            - bump_semver v3.0.0 beta 
            - bump_semver v1.0.0-rc rc
            - bump_semver v1.0.0-rc.12 final
           ## - bump_semver v1.0.0 badaction
            - pushd $res_repo_pipe_resourcePath
            
            - compare_git --resource repo_pipe --commit-range HEAD~2..HEAD utilityfunction.yml
            - pushd $res_repo_pipe_resourcePath
            - pwd
#             - compare_git --path $res_repo_pipe_resourcePath/test --commit-range HEAD~1..HEAD (doubt)
            
            - update_commit_status repo_pipe --status failure --message "my description" --context "my_utilityFunction_step"
             # (i am not able to see status on commit )
            - update_commit_status repo_pipe
            
            #- execute_command --retry printfe
            #- read_json $res_repo_pipe_resourcePath/testing/sample.json "DOCKER_USERNAME" (faling)
            
            
            - touch keys
            - echo "name =$res_repo_pipe_gitProvider_name" >> keys
            - replace_envs $PWD/keys 
            - cat keys
            
            - touch file.txt
            - echo "Hello frog" >> file.txt
            - add_cache_files $PWD/file.txt jfrog_pipe 
            
            - restore_cache_files jfrog_pipe $PWD/file.txt
            
            
            
            #             - openssl genrsa -out key.pem 1024 
#             - openssl rsa -in key.pem -text -noout
#             - openssl rsa -in key.pem -pubout -out pub.pem 
#             - openssl rsa -in pub.pem -pubin -text -noout 
#             - encrypt_string "secretValue" --key pub.pem
#             - encrypted=$(encrypt_string "secretValue" --key pub.pem)
#             - echo "$encrypted"
#             - decrypt_string "$encrypted" --key key.pem
            
#             - touch secrets.txt 
#             - echo "my secret keys are here" >> encrypted.txt
#             - cat encrypted.txt
#             - cat pub.pem
#             - encrypt_file --output secrets.txt --key pub.pem
#             - cat secrets.txt
            
            - popd
            
            
      - name: utilityfunction_2
        type: Bash
        configuration:
#           integrations:
#             - name: s_gitHub
          inputSteps:
            - name: my_utilityFunction_step
          inputResources:
            - name: repo_pipe                
        execution:
          onExecute:
            - printenv
            - pushd $res_repo_pipe_resourcePath
            - restore_cache_files jfrog_pipe $PWD/file.txt
            - popd







            

      
